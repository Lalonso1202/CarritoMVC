// <auto-generated />
using System;
using CarritoMVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarritoMVC.Migrations
{
    [DbContext(typeof(CarritoContext))]
    partial class CarritoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CarritoMVC.Models.Carrito", b =>
                {
                    b.Property<int>("IdCarrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCarrito"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.HasKey("IdCarrito");

                    b.ToTable("Carritos");
                });

            modelBuilder.Entity("CarritoMVC.Models.CarritoItem", b =>
                {
                    b.Property<int>("IdCarritoItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCarritoItem"), 1L, 1);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("CarritoIdCarrito")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("ProductoIdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("Subtotal")
                        .HasColumnType("int");

                    b.Property<double>("ValorUnitario")
                        .HasColumnType("float");

                    b.HasKey("IdCarritoItem");

                    b.HasIndex("CarritoIdCarrito");

                    b.HasIndex("ProductoIdCategoria");

                    b.ToTable("CarritoItems");
                });

            modelBuilder.Entity("CarritoMVC.Models.Categoria", b =>
                {
                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Nombre");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("CarritoMVC.Models.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompra"), 1L, 1);

                    b.Property<int>("CarritoIdCarrito")
                        .HasColumnType("int");

                    b.Property<int>("IdCarrito")
                        .HasColumnType("int");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("IdCompra");

                    b.HasIndex("CarritoIdCarrito");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("CarritoMVC.Models.Producto", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("CategoriaNombre")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("PrecioVigente")
                        .HasColumnType("float");

                    b.HasKey("IdCategoria");

                    b.HasIndex("CategoriaNombre");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("CarritoMVC.Models.Stock", b =>
                {
                    b.Property<int>("IdStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStock"), 1L, 1);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("IdStock");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("CarritoMVC.Models.StockItem", b =>
                {
                    b.Property<int>("StockItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockItemId"), 1L, 1);

                    b.Property<int>("StockIdStock")
                        .HasColumnType("int");

                    b.HasKey("StockItemId");

                    b.HasIndex("StockIdStock");

                    b.ToTable("StockItems");
                });

            modelBuilder.Entity("CarritoMVC.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dni")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Usuario");
                });

            modelBuilder.Entity("CarritoMVC.Models.Cliente", b =>
                {
                    b.HasBaseType("CarritoMVC.Models.Usuario");

                    b.Property<int>("CarritoId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cliente_Direccion");

                    b.Property<int>("Telefono")
                        .HasColumnType("int")
                        .HasColumnName("Cliente_Telefono");

                    b.HasIndex("CarritoId")
                        .IsUnique()
                        .HasFilter("[CarritoId] IS NOT NULL");

                    b.HasDiscriminator().HasValue("Cliente");
                });

            modelBuilder.Entity("CarritoMVC.Models.Empleado", b =>
                {
                    b.HasBaseType("CarritoMVC.Models.Usuario");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Empleado");
                });

            modelBuilder.Entity("CarritoMVC.Models.CarritoItem", b =>
                {
                    b.HasOne("CarritoMVC.Models.Carrito", null)
                        .WithMany("CarritoItems")
                        .HasForeignKey("CarritoIdCarrito");

                    b.HasOne("CarritoMVC.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoIdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("CarritoMVC.Models.Compra", b =>
                {
                    b.HasOne("CarritoMVC.Models.Carrito", "Carrito")
                        .WithMany()
                        .HasForeignKey("CarritoIdCarrito")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrito");
                });

            modelBuilder.Entity("CarritoMVC.Models.Producto", b =>
                {
                    b.HasOne("CarritoMVC.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaNombre");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("CarritoMVC.Models.StockItem", b =>
                {
                    b.HasOne("CarritoMVC.Models.Stock", "Stock")
                        .WithMany("StockItems")
                        .HasForeignKey("StockIdStock")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("CarritoMVC.Models.Cliente", b =>
                {
                    b.HasOne("CarritoMVC.Models.Carrito", "Carrito")
                        .WithOne("Cliente")
                        .HasForeignKey("CarritoMVC.Models.Cliente", "CarritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrito");
                });

            modelBuilder.Entity("CarritoMVC.Models.Carrito", b =>
                {
                    b.Navigation("CarritoItems");

                    b.Navigation("Cliente")
                        .IsRequired();
                });

            modelBuilder.Entity("CarritoMVC.Models.Stock", b =>
                {
                    b.Navigation("StockItems");
                });
#pragma warning restore 612, 618
        }
    }
}
